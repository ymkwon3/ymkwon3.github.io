{"version":3,"sources":["components/Project.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["App","props","cardRef","useRef","handleCardClick","idx","console","log","current","style","transform","className","onClick","ref","e","justifyContent","src","alt","textRef","useState","header","setHeader","cursor","setCursor","useEffect","content","text","lineIdx","textState","setInterval","slice","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAiEeA,MA9Df,SAAaC,GACT,IAAIC,EAAUC,iBAAO,IACfC,EAAkB,SAACC,GACrBC,QAAQC,IAAIL,EAAQM,QAAQH,GAAKI,MAAMC,WACM,oBAAzCR,EAAQM,QAAQH,GAAKI,MAAMC,UAC3BR,EAAQM,QAAQH,GAAKI,MAAMC,UAAY,kBAEvCR,EAAQM,QAAQH,GAAKI,MAAMC,UAAY,iBAG/C,OACI,qCACI,qBAAKC,UAAU,WAAf,sCAGA,sBAAKA,UAAU,uBAAuBC,QAAS,kBAAMR,EAAgB,IAAIS,IAAK,SAACC,GAAD,OAAOZ,EAAQM,QAAQ,GAAKM,GAA1G,UACI,sBAAKH,UAAU,2CAA2CF,MAAO,CAAEM,eAAgB,gBAAnF,UACI,qBAAKJ,UAAU,gBAAf,0BAGA,qBAAKK,IAAI,0DAA0DC,IAAI,QAE3E,qBAAKN,UAAU,6CAAf,SACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,gBAAf,0BAGA,uBACA,sBAAKA,UAAU,UAAf,iGAEI,uBAFJ,kGASZ,sBAAKA,UAAU,uBAAuBC,QAAS,kBAAMR,EAAgB,IAAIS,IAAK,SAACC,GAAD,OAAOZ,EAAQM,QAAQ,GAAKM,GAA1G,UACI,sBAAKH,UAAU,2CAA2CF,MAAO,CAAEM,eAAgB,gBAAnF,UACI,qBAAKJ,UAAU,gBAAf,2BAGA,qBAAKK,IAAI,0DAA0DC,IAAI,QAE3E,qBAAKN,UAAU,6CAAf,SACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,gBAAf,2BAGA,uBACA,sBAAKA,UAAU,UAAf,iGAEI,uBAFJ,sGCgCTX,MA7Ef,WACE,IAAMkB,EAAUf,mBADH,EAEegB,qBAFf,mBAENC,EAFM,KAEEC,EAFF,OAGeF,qBAHf,mBAGNG,EAHM,KAGEC,EAHF,KA8Cb,OA1CAC,qBAAU,WACR,IAAMC,EAAU,CAAC,6EAAkB,uEAAiB,+EAChDC,EAAO,GACPJ,EAAS,IACTjB,EAAM,EACNsB,EAAU,EACVC,GAAY,EACKC,aAAY,WAChB,MAAXP,GACFC,EAAUD,GACVA,EAAS,KAETC,EAAUD,GACVA,EAAS,OAEV,KACYO,aAAY,WACrBD,GACFF,GAAQD,EAAQE,GAAStB,GACzBgB,EAAUK,GACVrB,MAEAqB,EAAOA,EAAKI,MAAM,GAAI,GACtBT,EAAUK,GACU,IAAhBA,EAAKK,SACPH,GAAY,IAIZD,IAAYF,EAAQM,QACtBH,GAAY,EACZD,EAAU,EACVtB,EAAM,GAECA,IAAQoB,EAAQE,GAASI,SAChCH,GAAY,EACZD,IACAtB,EAAM,KAEP,OACF,IAGD,mCACE,qBAAKM,UAAU,MAAf,SACE,eAAC,IAAD,WACE,qBAAKA,UAAU,aAAf,SACE,sBAAKE,IAAKK,EAAV,UACGE,EAAQE,OAGb,sBAAKX,UAAU,uBAAf,UACE,qBAAKA,UAAU,WAAf,0BAGA,qBAAKA,UAAU,SACf,sBAAKA,UAAU,sBAAf,2IAEE,uBAFF,kKAIE,uBAJF,iMAQF,qBAAKA,UAAU,0BAAf,SACE,cAAC,EAAD,cCjEGqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.416c21b1.chunk.js","sourcesContent":["import { useEffect, useState, useRef } from 'react';\r\nimport '../css/App.css';\r\nimport '../css/Project.css';\r\nfunction App(props) {\r\n    let cardRef = useRef([]);\r\n    const handleCardClick = (idx) => {\r\n        console.log(cardRef.current[idx].style.transform);\r\n        if (cardRef.current[idx].style.transform !== 'rotateY(180deg)') {\r\n            cardRef.current[idx].style.transform = 'rotateY(180deg)';\r\n        } else {\r\n            cardRef.current[idx].style.transform = 'rotateY(0deg)';\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"subTitle\">\r\n                프로젝트\r\n            </div>\r\n            <div className=\"project-box flex-row\" onClick={() => handleCardClick(0)} ref={(e) => cardRef.current[0] = e}>\r\n                <div className=\"project-card project-card-front flex-row\" style={{ justifyContent: \"space-around\" }}>\r\n                    <div className=\"project-title\">\r\n                        Project Name\r\n                    </div>\r\n                    <img src=\"https://t1.daumcdn.net/cfile/tistory/24283C3858F778CA2E\" alt=\"\" />\r\n                </div>\r\n                <div className=\"project-card project-card-back flex-column\">\r\n                    <div className=\"flex-column\">\r\n                        <div className=\"project-title\">\r\n                            Project Name\r\n                        </div>\r\n                        <br />\r\n                        <div className=\"content\">\r\n                            내용내용내용내용내용내용내용\r\n                            <br />\r\n                            내용내용내용내용내용내용내용\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"project-box flex-row\" onClick={() => handleCardClick(1)} ref={(e) => cardRef.current[1] = e}>\r\n                <div className=\"project-card project-card-front flex-row\" style={{ justifyContent: \"space-around\" }}>\r\n                    <div className=\"project-title\">\r\n                        Project Name2\r\n                    </div>\r\n                    <img src=\"https://t1.daumcdn.net/cfile/tistory/24283C3858F778CA2E\" alt=\"\" />\r\n                </div>\r\n                <div className=\"project-card project-card-back flex-column\">\r\n                    <div className=\"flex-column\">\r\n                        <div className=\"project-title\">\r\n                            Project Name2\r\n                        </div>\r\n                        <br />\r\n                        <div className=\"content\">\r\n                            내용내용내용내용내용내용내용\r\n                            <br />\r\n                            내용내용내용내용내용내용내용\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","import React, { useRef, useEffect, useState } from 'react';\r\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/App.css';\r\nimport Project from './components/Project';\r\n\r\n// intor page\r\n\r\nfunction App() {\r\n  const textRef = useRef();\r\n  const [header, setHeader] = useState();\r\n  const [cursor, setCursor] = useState();\r\n  useEffect(() => {\r\n    const content = [\"권영민의 포트폴리오입니다.\", \"방문해주셔서 감사합니다.\", \"꾸준한 업데이트 예정입니다.\"];\r\n    let text = \"\";\r\n    let cursor = \"_\";\r\n    let idx = 0;\r\n    let lineIdx = 0;\r\n    let textState = true;\r\n    let cursorInterval = setInterval(() => {\r\n      if (cursor === \"_\") {\r\n        setCursor(cursor);\r\n        cursor = '';\r\n      } else {\r\n        setCursor(cursor);\r\n        cursor = '_'\r\n      }\r\n    }, 500);\r\n    let interval = setInterval(() => {\r\n      if (textState) {\r\n        text += content[lineIdx][idx];\r\n        setHeader(text);\r\n        idx++;\r\n      } else {\r\n        text = text.slice(0, -1);\r\n        setHeader(text);\r\n        if (text.length === 0) {\r\n          textState = true;\r\n        }\r\n      }\r\n\r\n      if (lineIdx === content.length) {\r\n        textState = false;\r\n        lineIdx = 0;\r\n        idx = 0;\r\n      }\r\n      else if (idx === content[lineIdx].length) {\r\n        textState = false;\r\n        lineIdx++;\r\n        idx = 0;\r\n      }\r\n    }, 200);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <BrowserRouter>\r\n          <div className=\"App-header\">\r\n            <div ref={textRef}>\r\n              {header}{cursor}\r\n            </div>\r\n          </div>\r\n          <div className=\"App-aboutMe flex-row\">\r\n            <div className=\"subTitle\">\r\n              소개\r\n            </div>\r\n            <div className=\"line\" />\r\n            <div className=\"content flex-column\">\r\n              좋은 개발자를 꿈꾸며 배우고 싶은 권영민입니다.\r\n              <br />\r\n              좋은 기회로 외주를 경험하였고, 이를 통해 개발에 대한 흥미와\r\n              <br />\r\n              문제 해결에 대한 흥미를 느껴 좋은 개발자라는 꿈을 가지게 되었습니다.\r\n            </div>\r\n          </div>\r\n          <div className=\"App-project flex-column\">\r\n            <Project />\r\n          </div>\r\n        </BrowserRouter>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}